{"version":3,"sources":["location.js","index.js"],"names":["Location","props","getGeoLocation","position","setArray","updateStateWithArray","array","Axios","coords","latitude","longitude","then","response","console","log","data","property","push","JSON","stringify","catch","error","locate","bind","renderTheArray","state","setShow","navigator","geolocation","this","getCurrentPosition","setState","AllPlaceObjects","className","src","alt","width","Container","Row","Col","xs","Button","variant","onClick","length","dateTime","tempPlaces","arrayWithHTML","onePlace","parkingStatus","district","returnAddress","serviceMessage","maxHours","dateToday","timeToday","Fragment","React","Component","ModalMethod","useState","show","handleClose","Navbar","bg","fixed","Brand","href","height","Modal","onHide","animation","size","aria-labelledby","centered","Header","closeButton","Title","Body","Footer","window","$lat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1312e3e7.chunk.js","sourcesContent":["import React from 'react'\r\nimport * as Axios from 'axios'\r\nimport './location.css';\r\nimport './index.css';\r\nimport Button from 'react-bootstrap/Button'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\n\r\nclass Location extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.locate = this.locate.bind(this);\r\n        this.updateStateWithArray = this.updateStateWithArray.bind(this);\r\n        this.renderTheArray = this.renderTheArray.bind(this);\r\n        this.state = ({ latitude: 59.38273599999999, longitude: 17.992799999999992, setShow: '' });\r\n    }\r\n\r\n\r\n    locate() {\r\n\r\n        if (navigator.geolocation) {\r\n            console.log(this);\r\n            navigator.geolocation.getCurrentPosition(this.getGeoLocation);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    getGeoLocation = (position) => {\r\n\r\n        let setArray = this.updateStateWithArray;\r\n\r\n        const array = [];\r\n        Axios.get(`http://localhost:5000/location?lat=${position.coords.latitude}&lng=${position.coords.longitude}`\r\n        )\r\n            .then(function (response) {\r\n                console.log(\"response data: \" + response.data);\r\n                for (const property of response.data) { //om response.data är en array\r\n                    array.push(property);\r\n                    console.log(property);\r\n                    //detta pushar in alla dataobject i data arrayen.\r\n                }\r\n                console.log('här kommer en array');\r\n                console.log(JSON.stringify(array));\r\n                setArray(array);\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n\r\n    }\r\n\r\n    updateStateWithArray(array) {\r\n        this.setState({ AllPlaceObjects: array });\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        console.log(this.state.AllPlaceObjects);\r\n\r\n        return (\r\n            <div className=\"calc-row\">\r\n                <img src=\"ParkHere header solid thinner.png\" alt=\"ParkHere header\" width=\"100%\" className=\"headerImg\"></img>\r\n                <Container>\r\n                    <Row>\r\n                        <Col xs=\"1\"></Col>\r\n                        <Col xs=\"10\">\r\n                            <div className=\"border\" width=\"100%\">\r\n                                <div>\r\n                                    <br></br>\r\n                                    <Button variant=\"primary\" onClick={this.locate} className=\"buttonz\">Hitta din plats!</Button>\r\n                                    <br></br>\r\n                                    <br></br>\r\n                                </div>\r\n                                <div>\r\n                                    {this.renderTheArray()}\r\n                                </div>\r\n                            </div>\r\n                        </Col>\r\n                        <Col xs=\"1\"></Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n    renderTheArray() {\r\n\r\n        if (this.state.AllPlaceObjects) {\r\n            if (this.state.AllPlaceObjects.length) {\r\n                let tempPlaces = this.state.AllPlaceObjects;\r\n                let dateTime;\r\n                let arrayWithHTML = [];\r\n\r\n                console.log(this.state.AllPlaceObjects);\r\n                console.log(tempPlaces);\r\n\r\n                console.log(this.state.AllPlaceObjects.length);\r\n\r\n                for (const onePlace of this.state.AllPlaceObjects) {\r\n\r\n                    if(onePlace.parkingStatus){\r\n                        arrayWithHTML.push(<div className=\"greenText\"><strong>Aktuella föreskrifter tyder på att parkering är tillåten på denna plats just nu.</strong><br></br><br></br></div>);\r\n                    } else {\r\n                        arrayWithHTML.push(<div className=\"redText\"><strong>Aktuella föreskrifter tyder på att parkering inte är tillåten på denna plats just nu.</strong><br></br><br></br></div>);\r\n                    }\r\n                    arrayWithHTML.push(<span>Här gäller följande parkeringsregler: <br></br><br></br></span>);\r\n                    arrayWithHTML.push(<div>Område: {onePlace.district}<br></br></div>);\r\n                    arrayWithHTML.push(<div>Adress: {onePlace.returnAddress}<br></br></div>);\r\n                    arrayWithHTML.push(<div>{onePlace.serviceMessage}<br></br></div>);\r\n                    arrayWithHTML.push(<div>{onePlace.maxHours}<br></br></div>);\r\n\r\n                    dateTime = <span><div className=\"dateTime\">{onePlace.dateToday} {onePlace.timeToday}</div><br></br></span>;\r\n                    console.log(onePlace);\r\n                }\r\n\r\n                console.log(arrayWithHTML[0]);\r\n                return (\r\n                    <React.Fragment>\r\n                        {dateTime}\r\n                        {arrayWithHTML}\r\n                    </React.Fragment>\r\n                )\r\n            } else {\r\n                return (\r\n                    <React.Fragment>\r\n                        <span className=\"textc\"><strong>Vi hittade inga parkeringar i närheten av din position. Tryck på knappen för att hämta din position på nytt.<br></br><br></br></strong></span>\r\n                    </React.Fragment>)\r\n            }\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                    <span>Tryck på knappen för att se om du kan parkera här.</span>\r\n                </React.Fragment>)\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default Location\r\n","import React, { useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Location from './location'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\n\r\nwindow.$lat = 'lat';\r\n\r\nfunction ModalMethod(props) {\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    return (\r\n\r\n        <>\r\n            <Navbar bg=\"light\" fixed=\"bottom\">\r\n                <Navbar.Brand href=\"#About\">\r\n                    <img\r\n                        src=\"/ParkIcon.png\"\r\n                        width=\"30\"\r\n                        height=\"30\"\r\n                        className=\"d-inline-block align-top\"\r\n                        alt=\"React Bootstrap logo\"\r\n                    />\r\n                    <Button variant=\"link\" onClick={handleShow} className=\"linkcolor\">\r\n                        Om ParkHere\r\n                    </Button>\r\n                </Navbar.Brand>\r\n            </Navbar>\r\n\r\n            <Modal show={show} onHide={handleClose} animation={true} {...props}\r\n      size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\r\n                <Modal.Header closeButton>\r\n                    <p><img\r\n                        src=\"/ParkIcon.png\"\r\n                        width=\"30\"\r\n                        height=\"30\"\r\n                        className=\"d-inline-block align-top\"\r\n                        alt=\"React Bootstrap logo\"\r\n                    />  </p>\r\n                    <Modal.Title >   ParkHere</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body><b>Tycker du också att det är svårt att veta vilka parkeringsregler som gäller?</b><br></br>\r\n                ParkHere är en app vars mål är att hjälp dig parkera korrekt.\r\n                Appen scannar av din position och ger dig parkeringsregler tillbaka.\r\n                För närvarande fungerar appen endast inom Stockholm Stad.\r\n                <br></br><br></br><br></br>\r\n                <p> <em>Vi eftersträvar alltid att kontinuerligt uppdatera informationen på vår hemsida och se till att informationen är korrekt.\r\n                Trots våra strävanden kan innehållet på vår hemsida vara ofullständigt och/eller felaktigt och inga rättigheter kan härledas från informationen på denna webbplats.\r\n                Tänk på att informationen på parkeringskyltar alltid är det som gäller.</em></p>\r\n                </Modal.Body>\r\n\r\n                <Modal.Footer>\r\n                    <Button variant=\"primary\" onClick={handleClose} className=\"ModalButton\">Stäng</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nReactDOM.render(<div><Location /><ModalMethod /></div>, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}