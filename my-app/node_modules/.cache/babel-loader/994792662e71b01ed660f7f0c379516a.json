{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Elvira\\\\Desktop\\\\ParkHere2\\\\my-app\\\\src\\\\location.js\";\nimport React from 'react';\nimport * as Axios from 'axios';\n\nclass Location extends React.Component {\n  constructor(props) {\n    super(props); // this.getmethod = this.getmethod.bind(this);\n\n    this.renderTheArray = () => {\n      return this.state.AllPlaceObjects.map(onePlace => /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }\n      }, onePlace)));\n    };\n\n    this.getGeoLocation = position => {\n      const array = [];\n      Axios.get(`http://localhost:8080/location?lat=${position.coords.latitude}&lng=${position.coords.longitude}`).then(function (response) {\n        for (const property of response.data) {\n          //om response.data 채r en array\n          array.push(property); //detta pushar in alla dataobject i data arrayen.\n        }\n\n        console.log('h채r kommer en array');\n        console.log(JSON.stringify(array));\n      }).catch(function (error) {\n        console.log(error);\n      });\n      this.updateStateWithArray(array); //   return (            \n      //   <React.Fragment>\n      //       <div>\n      //           {array}\n      //       </div>\n      // </React.Fragment>\n      // );\n    };\n\n    this.locate = this.locate.bind(this);\n    this.updateStateWithArray = this.updateStateWithArray.bind(this);\n    this.state = {\n      latitude: 59.38273599999999,\n      longitude: 17.992799999999992\n    }; // this.lat = this.lat.bind(this);\n    // this.long = this.long.bind(this);\n  }\n\n  locate() {\n    const posStatus = document.querySelector('#posStatus');\n    const locInfo = document.querySelector('#locInfo');\n    posStatus.innerHTML = 'Locating...';\n\n    if (navigator.geolocation) {\n      console.log(this);\n      navigator.geolocation.getCurrentPosition(this.getGeoLocation); // this.getmethod();\n    }\n  }\n\n  render() {\n    console.log(this.state.AllPlaceObjects);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.locate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, \"Get Location\"), /*#__PURE__*/React.createElement(\"h1\", {\n      id: \"posStatus\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"a\", {\n      id: \"locInfo\",\n      target: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, this.renderTheArray()));\n  }\n\n  updateStateWithArray(array) {\n    this.setState({\n      AllPlaceObjects: array\n    });\n    console.log(\"hejhejhejhejhejhejhejhej\");\n  }\n\n}\n\nexport default Location;","map":{"version":3,"sources":["C:/Users/Elvira/Desktop/ParkHere2/my-app/src/location.js"],"names":["React","Axios","Location","Component","constructor","props","renderTheArray","state","AllPlaceObjects","map","onePlace","getGeoLocation","position","array","get","coords","latitude","longitude","then","response","property","data","push","console","log","JSON","stringify","catch","error","updateStateWithArray","locate","bind","posStatus","document","querySelector","locInfo","innerHTML","navigator","geolocation","getCurrentPosition","render","setState"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport * as Axios from 'axios'\r\n\r\nclass Location extends React.Component {\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    // this.getmethod = this.getmethod.bind(this);\r\n    this.locate = this.locate.bind(this);\r\n    this.updateStateWithArray = this.updateStateWithArray.bind(this);\r\n    this.state = ({ latitude: 59.38273599999999, longitude: 17.992799999999992 });\r\n    // this.lat = this.lat.bind(this);\r\n    // this.long = this.long.bind(this);\r\n  }\r\n\r\n\r\n  locate() {\r\n\r\n    const posStatus = document.querySelector('#posStatus');\r\n    const locInfo = document.querySelector('#locInfo');\r\n    posStatus.innerHTML = 'Locating...'\r\n    if (navigator.geolocation) {\r\n      console.log(this);\r\n      navigator.geolocation.getCurrentPosition(this.getGeoLocation);\r\n\r\n      // this.getmethod();\r\n\r\n    }\r\n\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    console.log(this.state.AllPlaceObjects);\r\n\r\n    return (\r\n\r\n      <div>\r\n        <div>\r\n          <button onClick={this.locate}>Get Location</button>\r\n          <h1 id='posStatus'></h1>\r\n          <a id='locInfo' target=\"#\"></a>\r\n        </div>\r\n\r\n        <div>\r\n          {this.renderTheArray()}\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n    )\r\n\r\n  }\r\n\r\n  renderTheArray = () => {\r\n\r\n    return this.state.AllPlaceObjects.map(onePlace => ( \r\n      <React.Fragment>\r\n            <span>{onePlace}</span>\r\n      </React.Fragment>\r\n    ));\r\n  }\r\n\r\n\r\n\r\n  // getmethod () {\r\n\r\n  //     Axios.get(`http://localhost:8080/location?lat=${this.state.lat}&lng=${this.state.long}`\r\n  //         )\r\n  //       .then(function (response) {\r\n  //         console.log(response);\r\n  //       })\r\n  //       .catch(function (error) {\r\n  //         console.log(error);\r\n  //       });\r\n  // }\r\n\r\n\r\n  getGeoLocation = (position) => {\r\n    const array = [];\r\n    Axios.get(`http://localhost:8080/location?lat=${position.coords.latitude}&lng=${position.coords.longitude}`\r\n    )\r\n      .then(function (response) {\r\n        for (const property of response.data) { //om response.data 채r en array\r\n          array.push(property);\r\n          //detta pushar in alla dataobject i data arrayen.\r\n        }\r\n        console.log('h채r kommer en array');\r\n        console.log(JSON.stringify(array));\r\n\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n\r\n    this.updateStateWithArray(array);\r\n\r\n    //   return (            \r\n    //   <React.Fragment>\r\n    //       <div>\r\n    //           {array}\r\n    //       </div>\r\n    // </React.Fragment>\r\n    // );\r\n  }\r\n\r\n  updateStateWithArray(array) {\r\n    this.setState({ AllPlaceObjects: array });\r\n    console.log(\"hejhejhejhejhejhejhejhej\");\r\n  }\r\n}\r\n\r\nexport default Location\r\n"]},"metadata":{},"sourceType":"module"}